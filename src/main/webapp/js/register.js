;$(document).ready(function(){
	$('#information').checkAuthorized();
});

(function($){
	// プラグイン名
	var PLUGIN_NAME = "checkAuthorized";



//// 編集禁止↓ ///////////////////////////////////////////////////////
	var ImplementationClass = function(target, config) {
		var settings = $.extend({}, $[PLUGIN_NAME].defaults, config);
		var myself   = this;
		$(target).data(PLUGIN_NAME, myself);
//// 編集禁止↑ ///////////////////////////////////////////////////////



///////////////////////////////////////////////////////////////////////////
// Private Properties
//
// 記述方法：
// var プロパティ名 = デフォルト値;
///////////////////////////////////////////////////////////////////////////

		var parameters;

///////////////////////////////////////////////////////////////////////////
// Public Properties
//
// 記述方法：
// myself.プロパティ名 = デフォルト値;
///////////////////////////////////////////////////////////////////////////



///////////////////////////////////////////////////////////////////////////
// コンストラクタ
///////////////////////////////////////////////////////////////////////////

		/**
		 * constructor
		 */
		function _constructor_() {
			loadQuery();
			if(!parameters.account) {
				$(target).html("登録するアカウントを指定してください。");
				return;
			}

			$.ajax({
				  type		: 'GET'
				, dataType	: 'json'
				, cache		: false
				, url		: "api/check/" + parameters.account
			}).done(function( data ) {
					if(data.status != 0 && data.redirectTo) {
						location.href = data.redirectTo;
						return;
					}
					$(target).html("登録済みです。");
				}).fail(function(data, status, err, callback) {
					$(target).html("登録エラーが発生しました。");
				});
		}

///////////////////////////////////////////////////////////////////////////
/*// 編集禁止 ⇒//////////////////////////////*/ $.extend( myself, { ////


///////////////////////////////////////////////////////////////////////////
// Public Methods
//
// 記述方法：
// メソッド名 : function() {
//     実装
// }, ←このコンマを忘れないように
///////////////////////////////////////////////////////////////////////////



///////////////////////////////////////////////////////////////////////////
/*// 編集禁止 ⇒//////////*/ havingnopoint : "" }); _constructor_(); ////


///////////////////////////////////////////////////////////////////////////
// Private Methods
//
// 記述方法：
// function メソッド名() {
//     実装
// }
///////////////////////////////////////////////////////////////////////////

		/**
		 *
		 */
		function loadQuery() {
			parameters = {};
			if(document.location.search.length < 1) { return; }
			var query  = document.location.search.substring(1);
			var params = query.split('&');

			for (var i = 0; i < params.length; i++) {
				var element = params[i].split('=');
				var paramName = decodeURIComponent(element[0]);
				var paramValue = decodeURIComponent(element[1]);
				parameters[paramName] = paramValue;
			}
		}

///////////////////////////////////////////////////////////////////////////
/*// 編集禁止 ⇒//////////////////////////////*/ }; $[PLUGIN_NAME] = { ////


///////////////////////////////////////////////////////////////////////////
// Static Methods
//
// 記述方法：
// メソッド名 : function() {
//     実装
// }, ←このコンマを忘れないように
///////////////////////////////////////////////////////////////////////////



///////////////////////////////////////////////////////////////////////////
// Default Settings
///////////////////////////////////////////////////////////////////////////

		defaults : {
			  defaultProp001 : 0
			, defaultProp002 : 0
		}

///////////////////////////////////////////////////////////////////////////


//// 編集禁止↓ ///////////////////////////////////////////////////////////
	};

	$.fn[PLUGIN_NAME] = function(config){
		return this.each(function(i){
			new ImplementationClass(this, config);
		});
	};

})(jQuery);
