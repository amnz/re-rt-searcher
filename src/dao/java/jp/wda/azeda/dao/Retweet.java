package jp.wda.azeda.dao;

import java.io.Serializable;
import java.util.Date;

import org.seasar.dao.annotation.tiger.Bean;
import org.seasar.dao.annotation.tiger.Column;

/**
 * リツイート モデルクラス.
 *
 * @author generated by ERMaster
 * @version $Id$
 */
@Bean(table="Retweets")
public class Retweet implements Serializable {
	/** */
	private static final long serialVersionUID = -8853761425417682698L;

	/** ツイートID. */
	private Long tweetID;

	/** リツイート先. */
	private Long retweetTo;

	/** リツイートしたユーザID. */
	private Long retweeterID;

	/** スクリーンネーム. */
	private String screenName;

	/** 登録日時. */
	private Date registeredAt;

	/**
	 * コンストラクタ.
	 */
	public Retweet() {
	}

	/**
	 * ツイートID を設定します.
	 *
	 * @param tweetid
	 *            ツイートID
	 */
	public void setTweetID(Long tweetid) {
		this.tweetID = tweetid;
	}

	/**
	 * ツイートID を取得します.
	 *
	 * @return ツイートID
	 */
	@Column("TweetID")
	public Long getTweetID() {
		return this.tweetID;
	}

	/**
	 * リツイート先 を設定します.
	 *
	 * @param retweetto
	 *            リツイート先
	 */
	public void setRetweetTo(Long retweetto) {
		this.retweetTo = retweetto;
	}

	/**
	 * リツイート先 を取得します.
	 *
	 * @return リツイート先
	 */
	@Column("RetweetTo")
	public Long getRetweetTo() {
		return this.retweetTo;
	}

	/**
	 * リツイートしたユーザID を設定します.
	 *
	 * @param retweeterid
	 *            リツイートしたユーザID
	 */
	public void setRetweeterID(Long retweeterid) {
		this.retweeterID = retweeterid;
	}

	/**
	 * リツイートしたユーザID を取得します.
	 *
	 * @return リツイートしたユーザID
	 */
	@Column("RetweeterID")
	public Long getRetweeterID() {
		return this.retweeterID;
	}

	/**
	 * スクリーンネーム を設定します.
	 *
	 * @param screenname
	 *            スクリーンネーム
	 */
	public void setScreenName(String screenname) {
		this.screenName = screenname;
	}

	/**
	 * スクリーンネーム を取得します.
	 *
	 * @return スクリーンネーム
	 */
	@Column("ScreenName")
	public String getScreenName() {
		return this.screenName;
	}

	/**
	 * 登録日時 を設定します.
	 *
	 * @param registeredat
	 *            登録日時
	 */
	public void setRegisteredAt(Date registeredat) {
		this.registeredAt = registeredat;
	}

	/**
	 * 登録日時 を取得します.
	 *
	 * @return 登録日時
	 */
	@Column("RegisteredAt")
	public Date getRegisteredAt() {
		return this.registeredAt;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((tweetID == null) ? 0 : tweetID.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Retweet other = (Retweet) obj;
		if (tweetID == null) {
			if (other.tweetID != null) {
				return false;
			}
		} else if (!tweetID.equals(other.tweetID)) {
			return false;
		}
		return true;
	}

}
