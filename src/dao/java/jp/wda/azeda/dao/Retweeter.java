package jp.wda.azeda.dao;

import java.io.Serializable;
import java.sql.Timestamp;

import org.seasar.dao.annotation.tiger.Bean;
import org.seasar.dao.annotation.tiger.Column;

/**
 * リツイータ モデルクラス.
 *
 * @author generated by ERMaster
 * @version $Id$
 */
@Bean(table="Retweeters")
public class Retweeter implements Serializable {
	/** */
	private static final long serialVersionUID = 4535604234763982980L;

	/** リツイート先. */
	private Long retweetTo;

	/** リツイートしたユーザID. */
	private Long retweeterID;

	/** リツイート元発言者ID. */
	private Long userID;

	/** 登録日時. */
	private Timestamp registeredAt;

	/**
	 * コンストラクタ.
	 */
	public Retweeter() {
	}

	/**
	 * リツイート先 を設定します.
	 *
	 * @param retweetto
	 *            リツイート先
	 */
	public void setRetweetTo(Long retweetto) {
		this.retweetTo = retweetto;
	}

	/**
	 * リツイート先 を取得します.
	 *
	 * @return リツイート先
	 */
	@Column("RetweetTo")
	public Long getRetweetTo() {
		return this.retweetTo;
	}

	/**
	 * リツイートしたユーザID を設定します.
	 *
	 * @param retweeterid
	 *            リツイートしたユーザID
	 */
	public void setRetweeterID(Long retweeterid) {
		this.retweeterID = retweeterid;
	}

	/**
	 * リツイートしたユーザID を取得します.
	 *
	 * @return リツイートしたユーザID
	 */
	@Column("RetweeterID")
	public Long getRetweeterID() {
		return this.retweeterID;
	}

	/**
	 * リツイート元発言者ID を設定します.
	 *
	 * @param userid
	 *            リツイート元発言者ID
	 */
	public void setUserID(Long userid) {
		this.userID = userid;
	}

	/**
	 * リツイート元発言者ID を取得します.
	 *
	 * @return リツイート元発言者ID
	 */
	@Column("UserID")
	public Long getUserID() {
		return this.userID;
	}

	/**
	 * 登録日時 を設定します.
	 *
	 * @param registeredat
	 *            登録日時
	 */
	public void setRegisteredat(Timestamp registeredat) {
		this.registeredAt = registeredat;
	}

	/**
	 * 登録日時 を取得します.
	 *
	 * @return 登録日時
	 */
	@Column("RegisteredAt")
	public Timestamp getRegisteredAt() {
		return this.registeredAt;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((retweetTo == null) ? 0 : retweetTo.hashCode());
		result = prime * result + ((retweeterID == null) ? 0 : retweeterID.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Retweeter other = (Retweeter) obj;
		if (retweetTo == null) {
			if (other.retweetTo != null) {
				return false;
			}
		} else if (!retweetTo.equals(other.retweetTo)) {
			return false;
		}
		if (retweeterID == null) {
			if (other.retweeterID != null) {
				return false;
			}
		} else if (!retweeterID.equals(other.retweeterID)) {
			return false;
		}
		return true;
	}

}
